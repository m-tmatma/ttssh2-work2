name: build

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  COMPILER: VS_143
  COMPILER_FRIENDLY: vs2022
  GENERATOR: "Visual Studio 17 2022"
  CMAKE_COMMAND: cmake
  CMAKE_OPTION_LIBS: "-DARCHITECTURE=Win32"
  CMAKE_OPTION_GENERATE: "-A Win32"
  CMAKE_OPTION_BUILD: "--config Release"
  BUILD_DIR: build
  APPVEYOR_SAVE_CACHE_ON_ERROR: true
  VERBOSE: 1

jobs:
  windows:
    strategy:
      matrix:
        os: [windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      # see https://github.com/ilammy/msvc-dev-cmd
      # see https://zenn.dev/tan_y/articles/cc7a1ad3f219b0
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64_x86
          vsversion: 2022

      # - name: "Setup git"
      #   shell: cmd
      #   run: git config --global core.autocrlf input

      - uses: actions/checkout@v3

      # # see https://github.com/DWesl/setup-cygwin-ci/blob/977e3f4038520b80c18d0fcac08df34d7d0f6ea3/.github/workflows/cygwin-ci-attempt.yml#L28-L42
      # - name: Install Cygwin
      #   # You may pin to the exact commit or the version.
      #   # uses: egor-tensin/setup-cygwin@4f96f9fecb8c952fa32ff791b0a77d93d5191bb4
      #   uses: egor-tensin/setup-cygwin@v3
      #   with:
      #     # Target platform
      #     platform: x64 # optional, default is x64
      #     # Installation directory
      #     install-dir: c:/cygwin64 # optional, default is C:\tools\cygwin
      #     # Packages to install, separated by a space
      #     packages: dash gcc-core gcc-fortran automake libtool python38-cython python38-devel python38-tox python38-virtualenv python38-distlib python38-numpy git
      #     # Value to set as the CYGWIN environment variable
      #     env: # optional
      #     # Convert symlinks in /usr/bin to hardlinks
      #     hardlinks: 0 # optional, default is 0

      # - name: install crygwin
      #   run: |
      #     cd ci_scripts
      #     "cmake" -P install_cygwin.cmake
      #   shell: cmd
      #   timeout-minutes: 20

      - name: curl setup-x86_64.exe
        run: curl -OL https://www.cygwin.com/setup-x86_64.exe
        shell: cmd

      # see https://github.com/appveyor/build-images/blob/d208f5ca6495d22ced83d5d39a0c612ceffc36d7/scripts/Windows/install_cygwin.ps1#L10-L16
      - name: install crygwin
        run: cmd /c start /wait setup-x86_64.exe -qnNdO -R C:/cygwin64 -s http://cygwin.mirror.constant.com -l C:/cygwin64/var/cache/setup -P mingw64-i686-gcc -P mingw64-x86_64-gcc  -P mingw64-i686-gcc-g++ -P mingw64-x86_64-gcc-g++ -P gcc-g++ -P cmake -P autoconf -P automake -P bison -P libtool -P make -P python2 -P python -P python38 -P gettext-devel -P intltool -P libiconv -P pkg-config -P wget -P curl

        shell: cmd

      # # https://github.com/msys2/setup-msys2
      # - uses: msys2/setup-msys2@v2
      #   with:
      #     msystem: MSYS
      #     install: pacman
      # - run: c:\msys64\usr\bin\pacman.exe --noconfirm -S make gcc

      # - name: find msys64
      #   run: dir c:\msys64\usr\bin\*.exe
      #   shell: cmd

      # - name: "Setup Cygwin"
      #   uses: cygwin/cygwin-install-action@v2
      #   with:
      #     platform: x86_64
      #     packages: automake make cmake gcc-g++ doxygen graphviz libssl-devel libuuid-devel
      #     install-dir: c:\cygwin64

      # - name: build cygterm
      #   run: cygwin\cygterm\build.bat
      #   shell: cmd

      # https://ttssh2.osdn.jp/manual/4/ja/reference/develop.html#build-cygterm
      #- name: build CygTerm
      #  run: |
      #    cd
      #    cd cygwin/cygterm
      #    make
      #  shell: bash

      - name: build script
        run: ci_scripts\build_appveyor.bat
        shell: cmd
      - name: find exe
        run: dir /b /s /a-d *.exe
        shell: cmd


