name: build

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  COMPILER: VS_143
  COMPILER_FRIENDLY: vs2022
  GENERATOR: "Visual Studio 17 2022"
  CMAKE_COMMAND: cmake
  CMAKE_OPTION_LIBS: "-DARCHITECTURE=Win32"
  CMAKE_OPTION_GENERATE: "-A Win32"
  CMAKE_OPTION_BUILD: "--config Release"
  BUILD_DIR: build
  APPVEYOR_SAVE_CACHE_ON_ERROR: true
  VERBOSE: 1

jobs:
  windows:
    strategy:
      matrix:
        os: ["windows-2022"]
    runs-on: ${{ matrix.os }}
    steps:
      # see https://github.com/ilammy/msvc-dev-cmd
      # see https://zenn.dev/tan_y/articles/cc7a1ad3f219b0
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64_x86
          vsversion: 2022

      # - name: "Setup git"
      #   shell: cmd
      #   run: git config --global core.autocrlf input

      - uses: actions/checkout@v3

      # https://github.com/msys2/setup-msys2
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MSYS
          install: pacman
      - run: c:\msys64\usr\bin\pacman.exe --noconfirm -S make gcc

      # - name: find msys64
      #   run: dir c:\msys64\usr\bin\*.exe
      #   shell: cmd

      - name: "Setup Cygwin"
        uses: cygwin/cygwin-install-action@v2
        with:
          platform: x86_64
          packages: automake make cmake gcc-g++ doxygen graphviz libssl-devel libuuid-devel
          install-dir: c:\cygwin64

      # - name: build cygterm
      #   run: cygwin\cygterm\build.bat
      #   shell: cmd

      # https://ttssh2.osdn.jp/manual/4/ja/reference/develop.html#build-cygterm
      #- name: build CygTerm
      #  run: |
      #    cd
      #    cd cygwin/cygterm
      #    make
      #  shell: bash

      - name: build script
        run: ci_scripts\build_appveyor.bat
        shell: cmd
      - name: find exe
        run: dir /b /s /a-d *.exe
        shell: cmd


